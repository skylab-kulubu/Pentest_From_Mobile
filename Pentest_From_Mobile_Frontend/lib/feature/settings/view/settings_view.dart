import 'package:flutter/material.dart';
import 'package:mobile_pentest/product/connectivity_provider/connectivity_provider.dart';
import 'package:mobile_pentest/product/theme_Provider/theme_provider.dart';
import 'package:provider/provider.dart';

import '../../../core/enum/networkEnum/network_enum.dart';
import '../../no_connection/no_connection.dart';

class SettingsView extends StatefulWidget {
  const SettingsView({super.key});
  @override
  State<SettingsView> createState() => _SettingsViewState();
}

class _SettingsViewState extends State<SettingsView> with ProjectDurations {
  final String title = 'Settings';
  @override
  Widget build(BuildContext context) {
    return context.watch<ConnectivityProvider>().networkConnectivityEnums == NetworkConnectivityEnums.online
        ? Scaffold(
            appBar: AppBar(
              title: Text(title),
              // leading: IconButton(
              //     icon: const Icon(Icons.chevron_left),
              //     onPressed: () {
              //       NavigationService.instance.router.go(NavigationEnums.home.routeName);
              //     }),
            ),
            body: Column(children: [
              Padding(
                padding: const EdgeInsets.all(8.0),
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const FittedBox(child: Text('Theme-not fully implemented but works')),
                    InkWell(
                      onTap: () => context.read<ThemeProvider>().changeTheme(),
                      child: AnimatedCrossFade(
                          firstChild: Container(color: Colors.white30, height: 45, width: 100),
                          secondChild: Container(color: Colors.black38, height: 45, width: 100),
                          crossFadeState: context.watch<ThemeProvider>().isDarkTheme
                              ? CrossFadeState.showFirst
                              : CrossFadeState.showSecond,
                          duration: lowDurations),
                    )
                  ],
                ),
              )
            ]),
          )
        : const NoConnectionView();
  }
}

mixin ProjectDurations {
  Duration lowDurations = const Duration(seconds: 2);
}
