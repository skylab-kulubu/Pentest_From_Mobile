import 'package:flutter/material.dart';
import 'package:mobile_pentest/core/enum/networkEnum/network_enum.dart';
import 'package:mobile_pentest/core/init/network/connectivity/network_connectivity.dart';

import '../../core/init/network/connectivity/interface/inetwork_connectivity.dart';

class ConnectivityProvider extends ChangeNotifier {
  ConnectivityProvider() {
    checkFirstConnectivity();
    listenNetworkStatus();
  }

  NetworkConnectivityEnums? networkConnectivityEnums = NetworkConnectivityEnums.offline;
  final INetworkConnectivity networkConnectivity = NetworkConnectivity();

  bool isDark = true;
  bool isNetworkStatusLoading = true;

  void changeTheme() {
    isDark = !isDark;
    notifyListeners();
  }

  void listenNetworkStatus() {
    networkConnectivity.streamNetworkConnectivity((connectivityResult) {
      networkConnectivityEnums = connectivityResult;
      notifyListeners();
    });
  }

  void checkFirstConnectivity() async {
    isNetworkStatusLoading = true;
    networkConnectivityEnums = await networkConnectivity.checkNetworkConnectivity();
    isNetworkStatusLoading = false;
    notifyListeners();
  }

  void changeConnectivity() {
    if (networkConnectivityEnums == NetworkConnectivityEnums.offline) {
      networkConnectivityEnums = NetworkConnectivityEnums.online;
    } else {
      networkConnectivityEnums = NetworkConnectivityEnums.offline;
    }
    notifyListeners();
  }

  ThemeData get appTheme => isDark ? ThemeData.dark() : ThemeData.light();
}
